{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,KAGhBO,QAAQC,IAAI,iBAGZ,SACE,uBAAOC,KAAK,OAAOC,MAAOX,EAAYY,SAdhB,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,a,8BCQZG,EAdF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,iDACwCC,UAAUH,GADlD,+DAEII,MAAMF,GAFV,cAERG,EAFQ,gBAGSA,EAAIC,OAHb,uBAGNC,EAHM,EAGNA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARxB,kBAWPM,GAXO,4CAAH,sDCWEO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCiBKO,EAlBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACjB,ECH0B,SAACA,GAC3B,MAA0BhB,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDX2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACE,qCACE,6BAAKpB,IACJoB,GACC,mBAAGJ,UAAU,mCAAb,wBAEF,qBAAKA,UAAU,WAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBiB,IAAKjB,EAAIC,eES1BiB,EArBM,WACnB,MAAoC5C,mBAAS,CAAC,YAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACE,qCACE,gDACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BACG8C,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CACEA,SAAUA,GACLA,Y,MCZjB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8f819527.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setInputValue(\"\");\n    }\n\n    console.log(\"Submit hecho\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=JBtxogybIE5eEvwZt5QhrY1uulrXJ77f`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n\nexport default getGifs","import React from \"react\";\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","// import React, { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Loading...</p>\n      )}\n      <div className=\"cardGrid\">\n        {images.map((img) => (\n          <GifGridItem {...img} key={img.id} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport getGifs from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\"\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"Friends\"]);\n\n  return (\n    <>\n      <h1>GIF EXPERT APP</h1>\n      <hr />\n      <AddCategory setCategories={setCategories} />\n      {/* <button onClick={handleAdd}>Add</button> */}\n      <ol>\n        {categories.map((category) => (\n          <GifGrid \n            category={category}\n            key={category}\n          />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}